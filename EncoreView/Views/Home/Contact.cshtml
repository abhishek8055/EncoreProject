@model EncoreML.FeedbackModel

@{
    ViewBag.Title = "Contact Us";
}

<div class="container my-5">
    <hr />
    <div class="row justify-content-center">
        <h3><b>Contact Us</b></h3>
    </div>
    <hr />

    @{
        if (TempData["FeedbackFail"] != null)
        {
            bool feedFail = (bool)TempData["FeedbackFail"];
            if (feedFail)
            {
                <div class="alert alert-danger" role="alert">
                    <strong>Something went wrong!</strong> Please try again later...
                </div>
            }
            else
            {
                <div class="alert alert-success" role="alert">
                    <strong>thanks for giving us your valuable feedback...</strong>
                </div>
            }
        }
    }


    @using (Html.BeginForm("AddFeedback", "Home"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Give us your valuable feedback</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
    <hr />
    <div>
        <h5><b>Mail us :</b></h5>
    </div>
    <address>
        One Microsoft Way<br />
        Redmond, WA 98052-6399<br />
        <abbr title="Phone">P:</abbr>
        425.555.0100
    </address>

    <address>
        <strong>Support:</strong>   <a href="mailto:Support@example.com">Support@example.com</a><br />
        <strong>Marketing:</strong> <a href="mailto:Marketing@example.com">Marketing@example.com</a>
    </address>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>