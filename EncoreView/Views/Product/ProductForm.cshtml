@model EncoreML.AddProductModel
@{
    ViewBag.Title = "Add Product";
}

<hr />
<div class="d-flex justify-content-center">
    <h3 class="font-weight-bold text-secondary">Add Item</h3>
</div>
<hr />

@{
    if (TempData["ProductNotAdded"] != null)
    {
        bool failed = (bool)TempData["ProductNotAdded"];
        if (failed)
        {
            <div class="alert alert-danger" role="alert">
                <strong>Product not added, something went wrong!</strong> Please enter correct credentials...
            </div>
        }
    }
}
<div class="center_Div">
    @using (Html.BeginForm("AddProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, "Category", new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Category, "CId", "CName"), "- Please Select -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.UploadImage1, htmlAttributes: new { @class = "control-label" })
                        <input type="file" name="UploadImage1" accept="image/x-png,image/gif,image/jpeg, image/jpg" class="form-control-file" required />
                        @Html.ValidationMessageFor(model => model.UploadImage1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.UploadImage2, htmlAttributes: new { @class = "control-label" })
                        <input type="file" name="UploadImage2" accept="image/x-png,image/gif,image/jpeg, image/jpg" class="form-control-file" />
                        @Html.ValidationMessageFor(model => model.UploadImage2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.UploadImage3, htmlAttributes: new { @class = "control-label" })
                        <input type="file" name="UploadImage3" accept="image/x-png,image/gif,image/jpeg, image/jpg" class="form-control-file" />
                        @Html.ValidationMessageFor(model => model.UploadImage3, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, "Description", new { @class = "control-label" })
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control col-md-12" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group button_position">
                <input type="submit" value="Add Product" class="btn btn-primary btnposition float-right" />
            </div>
        </div>

    }
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

